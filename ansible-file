#redhat training ansible

/home/student/playbooks

ansible.cfg
inventory=/home/student/playbooks/inventory
remote_user=devops
ask_pass=false
roles_path=/home/student/playbooks/roles
[privilege_escalation]
become=true
become_user=root
become_method=sudo
become_ask_pass=false

inventory
[dev]
servera.lab.example.com

[balancers]
serverb.lab.example.com

[prod]
serverc.lab.example.com
serverd.lab.example.com

[webservers:children]
prod


ansible-navigatory.yml

---
  ansible-navigatory:
    execution-environment:
      image: utility.lab.example.com/ee-supported/li:latest
      pull:
        policy: missing
    playbook-artifact:
        enable: false
    mode: stdout

switch user to install package

su - root
pass: redhat

dnf install ansible 'id'

==========================

question 2:

adhoc.sh

#!/bin/bash
ansible all -m yum_repository -a 'name=baseos description="baseos description" baseurl=http://content.example.com/rhel9.0/x86_64/dvd/BaseOS/ enabled=yes gpgcheck=yes gpgkey=http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release'
 
ansible all -m yum_repository -a 'name=appstream descansible all -a 'ls -l /etc/yum.repos.d/'ription="app description" baseurl=http://content.example.com/rhel9.0/x86_64/dvd/AppStream/ enabled=yes gpgcheck=yes gpgkey=http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release'

chmod a+x adhoc.sh
ansible all -a 'cat /etc/yum.repos.d/appstream.repo'
ansible all -a 'cat /etc/yum.repos.d/baseos.repo'
ansible all -a 'ls -l /etc/yum.repos.d/'


question 4:

/home/student/playbooks/roles/requirements.yml
---
  - src: file:///home/student/playbooks/ansible9.0/balancer.tar.gz
    name: balancer
  - src: file:///home/student/playbooks/ansible9.0/phpinfo.tar.gz
    name: phpinfo
cd ..

ansible-galaxy role install -r roles/requirements.yml -p roles

ansible-galaxy role list

question5: offline roles creation


ansible-galaxy role init apache
ansible-galaxy role list
vim apache/tasks/main.yml

---
# tasks file for apache
 - name: httpdinstall
   ansible.builtin.dnf:
    name: httpd
    state: present
 - name: httpdservicestart
   ansible.builtin.service:
    name: httpd
    state: started
    enabled: yes
 - name: install firewalld
   ansible.builtin.dnf:
    name: firewalld
    state: present
 - name: firewalld service start
   ansible.builtin.service:
    name: firewalld
    state: started
    enabled: yes
 - name: https service start on firewalld
   ansible.posix.firewalld:
    service: http
    permanent: yes
    immediate: yes
    state: enabled
 - name: configure index file
   ansible.builtin.template:
    src: index.j2
    dest: /var/www/html/index.html

vim apache/templates/index.j2
my host is {{ansible_facts['fqdn']}} on {{ansible_facts['default_ipv4']['address']}}

/home/student/playbooks/apache-role.yml
---
- name: apache role configure play
  hosts: dev
  roles: 
    - apache

ansible-navigator run apache_role.yml

curl servera

=====


question 6:

roles.yml (configure php roles first)

---
- name: php info role configure play
  hosts: webservers
  roles:
    - phpinfo
- name: blanacer role configure plau
  hosts: balancers
  roles:
    - balancer

ansible-navigator run roles.yml

curl serverb -- load balancer

=================

question 7:
dnf install rhel-system-roles-1.16.2-1.el9_0.noarch -y

cp -rv /usr/share/ansible/roles/rhel-system-roles.timesync roles/

timesync.yml --- under playbooks

---
- name: ntp role configuration play
  hosts: all
  vars: 
    timesync_ntp_servers: 
     -  hostname: classroom.example.com
        iburst: yes
  roles:
    - rhel-system-roles.timesync

ansible-navigator run timesync.yml

tree roles -> to view roles



question: 8:

packages.yml


---    
- name: php and mariadb install in devb and test
  hosts: dev,balancer
  tasks:
  - name: php mariadb install
    ansible.builtin.dnf:
      name:
        - php
        - mariadb
      state: present
- name: development tool install in prod group
  hosts: prod
  tasks:
  - name: install development tools
    ansible.builtin.dnf:
      name: '@RPM Development Tools'
      state: present
- name: update all packages in dev group
  hosts: dev
  tasks:
  - name: update all packages
    ansible.builtin.dnf:
      name: '*'
      state: latest

ansible-navigator run packages.yml


=======================

question: 9

webcontent.yml

--
- name: webdev directory creation and configuration
  hosts: dev
  tasks: 
  - name: webdev directory creation
    ansible.builtin.file:
      path: /webdev
      group: devops
      mode: u=rxx,g=rxx,o=rx,g=g+s
      setype: httpd_sys_content_t
      recurse: yes
      state: directory
      force: yes
  - name: index file creation
    ansible.builtin.file:
      path: /webdev/index.html
      state: touch
  - name: index file configure
    ansible.builtin.copy:
      content: "Development"
      dest: /webdev/index.html
  - name: create a link
    ansible.builtin.file:
      src: /webdev/index.html
      dest: /var/www/html/webdev
      state: link
ansible-navigatory run webcontent.yml

curl servera/webcontent

Question: 10



---
---
- name: hw report generate reprot on all host
  hosts: all
  tasks:
  - name: download file from the url
    ansible.builtin.get_url:
      url: http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release
      dest: /root/hwreport.txt
  - name: gathering report on all hosts
    ansible.builtin.set_fact:
      HOSTNAME: "{{ansible_facts['hostname']}}"
      BIOS: "{{ansible_bios_version}}"
      MEMORY: "{{ansible_memtotal_mb}}"
      CPU: "{{ansible_processor_vcpus}}"
      VDA_DISK_SIZE: "{{ansible_facts['devices']['vda']['size']}}"
      VDB_DISK_SIZE: "{{ansible_facts['devices']['vdb']['size']}}"
  - name: copying content
    ansible.builtin.copy:
      content: |
        HOSTNAME= "{{HOSTNAME|default(NONE)}}"
        BIOS= "{{BIOS|default(NONE)}}"
        MEMORY= "{{MEMORY|default(NONE)}}"
        CPU= "{{CPU|default(NONE)}}"
        VDA_DISK_SIZE= "{{VDA_DISK_SIZE|default(NONE)}}"
        VDB_DISK_SIZE= "{{VDB_DISK_SIZE|default(NONE)}}"
      dest: /root/hwreport.txt

ansible-navigator run hwreport.yml

ansible all -a 'cat /root/hwreport.txt'

question: 11

Issue.yml
---
- name: issue file configuration play
  hosts: all
  tasks:
    - name: on dev host
      ansible.builtin.copy:
        content: Development
        dest: /etc/issue
      when: inventory_hostname in groups['dev']
    - name: on test host                          
      ansible.builtin.copy:                      
        content: Balancer                     
        dest: /etc/issue                         
      when: inventory_hostname in groups['balancers']
    - name: on prod host                          
      ansible.builtin.copy:                      
        content: Production                     
        dest: /etc/issue                         
      when: inventory_hostname in groups['prod']

ansible-navigator run issue.yml

ansible all -a 'cat /etc/issue'

question 12:

wget to download (wget http://xxxxx)

myhosts.j2
127.0.0.1 localhost.localdomain localhost
192.168.0.1 localhost.localdomain localdomain
{% for host in groups['all'] %}
{{ hostvars[host]['ansible_facts']['default_ipv4']['address'] }} {{ hostvars[host]
['ansible_facts']['fqdn'] }} {{ hostvars[host]['ansible_facts']['hostname'] }}
{% endfor %}

hosts.yml

---
- name: etc hosts file configuration play
  hosts: all
  tasks:
   - name: on dev group
     ansible.builtin.template:
      src: myhosts.j2
      dest: /etc/hosts
     when: inventory_hostname in groups['dev']

ansible-navigator run hosts.yml

ansible dev -a 'cat /etc/hosts'

question 13:


vault.yml
---
pw_manager: lammgr
pw_developer: lamdev


secret.txt

P@sswOrd
ansible-vault encrypt vault.yml --vault-password-file=secret.txt
Encryption successful
[student@workstation playbooks]$ ansible-vault view  vault.yml --vault-password-file=secret.txt

Question 14:

wget user_list.yml (wget http://xxxxxxx)

users.yml
---
- name: user creation play
  hosts: all
  vars_files:
    - vault.yml
    - user_list.yml
  tasks: 
    - name: develops name creation
      ansible.builtin.group:
        name: devops
        state: present
      when: inventory_hostname in groups['dev'] or inventory_hostname in groups['balancers']
    - name: user creation
      ansible.builtin.user:
        name: "{{item.name}}"
        groups: devops
        uid: "{{item.id}}"
        password: "{{pw_developer|password_hash('sha512')}}"
      when: item.job=='developer' and (inventory_hostname in groups['dev'] or inventory_hostname in groups['balancers'])
      loop: "{{users}}"
    - name: manager name creation
      ansible.builtin.group:
        name: manager
        state: present
      when: inventory_hostname in groups['balancers']
    - name: user creation
      ansible.builtin.user:
        name: "{{item.name}}"
        groups: manager
        uid: "{{item.id}}"
        password: "{{pw_manager|password_hash('sha512')}}"
      when: item.job=='manager' and inventory_hostname in groups['balancers']
      loop: "{{users}}"

user_list.yml
---
users:
  - name: user1
    job: developer
    id: 1020
  - name: user2
    job : manager
    id: 1021
  - name: user3
    job: developer
    id: 1022
  - name: user4   
    job: developer
    id: 1023
  - name: user5   
    job : manager 
    id: 1024
  - name: user6   
    job: manager
    id: 1025

user vault.yml for password

commands:

ansible-navigator run users.yml --vault-password-file secret.txt

ansible dev -a 'tail /etc/shadow'
ansible dev -a 'tail /etc/passwd'
ansible dev -a 'tail /etc/group'
ansible balancer -a 'tail /etc/passwd'




